SELECT WORKER_TITLE FROM TITLE WHERE WORKER_ID_REF=(SELECT WORKER_ID FROM WORKER WHERE WORKER_ID=1);
SELECT WORKER_ID FROM WORKER WHERE WORKER_ID=1;
SELECT * FROM TITLE;
select * from worker;
SELECT WORKER_TITLE FROM TITLE WHERE WORKER_ID_REF=( SELECT WORKER_ID FROM WORKER WHERE LAST_NAME='Ansari');
-- BETWEEN QUERY
SELECT* FROM WORKER WHERE SALARY BETWEEN 20000 AND 90000;
USE ORG;
-- IS NULL
SELECT FIRST_NAME FROM WORKER WHERE FIRST_NAME IS NOT NULL;
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%i_';
(SELECT FIRST_NAME FROM WORKER ORDER BY SALARY DESC);
SELECT DISTINCT DEPARTMENT FROM WORKER;
SELECT DISTINCT DEPARTMENT FROM WORKER;
SELECT DEPARTMENT,SUM(SALARY) FROM WORKER GROUP BY DEPARTMENT;

create table loan(
	ACCOUNT_ID INT NOT NULL PRIMARY KEY UNIQUE,
    ACCOUNT_BALANCE INT DEFAULT 2500 NOT NULL,
    FNAME CHAR(50)
);
SELECT * FROM LOAN;
ALTER TABLE LOAN ADD INTEREST FLOAT NOT NULL DEFAULT (2/100);
ALTER TABLE LOAN MODIFY INTEREST DOUBLE;
ALTER TABLE LOAN ADD LOAN_AMT INT NOT NULL;
ALTER TABLE LOAN MODIFY LOAN_AMT DOUBLE;
ALTER TABLE LOAN CHANGE LOAN_AMT LOAN_AMOUNT INT(255);
desc LOAN;
SELECT * FROM LOAN;
ALTER TABLE LOAN ADD COLUMN EXTRA_PAYER CHAR(25);
ALTER TABLE LOAN DROP COLUMN EXTRA_PAYER;
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INT NOT NULL PRIMARY KEY
);
USE ORG;
CREATE TABLE AWE_1(NAME1 CHAR(2),NUMBER1 INT);
CREATE TABLE AWE_2(NAME1 CHAR(2),NUMBER1 INT);
INSERT INTO AWE_1 VALUES('A',1),('B',2),('C',3);
INSERT INTO AWE_2 VALUES('A',1),('C',3),('D',4);
SELECT * FROM AWE_1;
SELECT * FROM AWE_2;
-- DEMONSTARTION OF JOIN 
SELECT * FROM AWE_1 UNION SELECT * FROM AWE_2;
UPDATE AWE_1 set NUMBER1=2 WHERE  NAME1='A';
SELECT * FROM WORKER WHERE DEPARTMENT ="Admin";
SELECT * FROM WORKER WHERE DEPARTMENT NOT IN ('HR','Admin');
SELECT * FROM AWE_1;

-- Using Limit Clause
-- SELECT * FROM TABLE WHERE COND LIMIT NO OF RECORDS
Select * from Worker WHERE SALARY>1000 LIMIT 3;

-- TO DISPLAY THE COLUMN NAME AS DEFAULT NAME OF COLUMN NOT GIVEN
SELECT MAX(SALARY) AS GPR FROM WORKER;
-- SELECT THE WORKER WITH HIGEST SALARY
SELECT * FROM WORKER ORDER BY SALARY DESC LIMIT 1;
SELECT MAX(SALARY) AS SALARY,FIRST_NAME from WORKER GROUP BY SALARY,FIRST_NAME;
-- SUB Query
SELECT FIRST_NAME FROM WORKER WHERE SALARY=(SELECT MAX(SALARY) FROM WORKER);
-- Count total number of rows in product table IT DOESNT COUNT NULL VALUES 
SELECT COUNT(*) AS COUNTCOLUMN FROM WORKER;
-- Counts the total number of worker titles or postions
SELECT COUNT(DISTINCT WORKER_TITLE) FROM TITLE;
SELECT DEPARTMENT,COUNT(Department) as Count FROM WORKER GROUP BY DEPARTMENT;
SELECT SUM(SALARY) FROM WORKER;
SELECT DEPARTMENT,SUM(SALARY) FROM WORKER GROUP BY DEPARTMENT;
SELECT AVG(SALARY) FROM WORKER;
-- Creating a  View
CREATE VIEW WORKERTABLE AS SELECT * FROM WORKER ORDER BY SALARY LIMIT 1; 
SELECT * FROM WORKERTABLE;
DROP VIEW WORKERTABLE;
-- WILD CARD 
SELECT * FROM WORKER;
select * from worker where first_name like 'A%';
-- Concationation mysql
SELECT concat(WORKER_ID,",",FIRST_NAME) AS DB FROM WORKER;
-- INNER JOIN
SELECT * FROM WORKER;
SHOW TABLES;
SELECT * FROM TITLE;
SELECT * FROM BONUS;
SELECT * FROM WORKER;
SELECT W.WORKER_ID,W.FIRST_NAME,T.WORKER_TITLE,B.BONUS_AMOUNT FROM WORKER AS W INNER JOIN TITLE AS T INNER JOIN BONUS AS B ON W.WORKER_ID=T.WORKER_ID_REF AND B.WORKER_REF_ID=T.WORKER_ID_REF;
SELECT W.WORKER_ID,W.FIRST_NAME,T.WORKER_TITLE,B.BONUS_AMOUNT FROM WORKER AS W ,TITLE AS T ,BONUS AS B WHERE W.WORKER_ID=T.WORKER_ID_REF AND B.WORKER_REF_ID=T.WORKER_ID_REF;
-- LEFT JOIN
SELECT W.* , B.* FROM WORKER AS W LEFT JOIN BONUS AS B ON W.WORKER_ID = B.WORKER_REF_ID;
SELECT B.*,W.* FROM WORKER AS W RIGHT JOIN BONUS AS B ON W.WORKER_ID = B.WORKER_REF_ID;
SELECT * FROM BONUS;
-- FULL JOIN
-- ORDER OF ARGUMENTS SHOULD BE SAME FOR CORRECT OUTPUT
SELECT W.* , B.* FROM WORKER AS W LEFT JOIN BONUS AS B ON W.WORKER_ID = B.WORKER_REF_ID UNION SELECT W.*,B.* FROM WORKER AS W RIGHT JOIN BONUS AS B ON W.WORKER_ID = B.WORKER_REF_ID;
-- CARTISEAN PRODUCT
SHOW TABLES;
SELECT * FROM AWE_1;
SELECT * FROM AWE_2;
-- SET Operations
SELECT * FROM AWE_1 UNION SELECT * FROM AWE_2;
UPDATE AWE_1 SET NUMBER1=1 WHERE NAME1="A";
set sql_safe_updates=1;
-- NO INTERSECT IN MYSQL
-- Simulation using INNSER JOIN
SELECT * FROM AWE_1 INNER JOIN AWE_2 USING(NAME1);
-- Simulation of minus
select * from AWE_1 LEFT JOIN AWE_2 USING (NAME1) WHERE AWE_2.NAME1 IS NULL;
-- Sub Queries
-- WHERE ON SAME TABLE
SELECT * FROM WORKER WHERE  SALARY =(SELECT MAX(SALARY) FROM WORKER ); -- USE IN OR = SAME GET
-- VIEW
SELECT * FROM  WORKER;
CREATE VIEW CUSTOM_VIEW AS SELECT WORKER_ID,FIRST_NAME FROM WORKER;
SELECT * FROM CUSTOM_VIEW;
ALTER VIEW CUSTOM_VIEW AS SELECT WORKER_ID FROM WORKER;
